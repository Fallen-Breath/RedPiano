name: Upload Python Package

on:
  push:

jobs:
  pack:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install pyinstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    
    - name: Pack windows distribution
      run: |
        pyinstaller src/main.py -F
        mkdir dist/RedPiano
        move dist/main.exe dist/RedPiano
        copy mapping.json dist/RedPiano
        copy readme.md dist/RedPiano
        copy resources/input.txt dist/RedPiano
        copy resources/*.md dist/RedPiano
        7z a -tzip dist/RedPiano-windows.zip dist/RedPiano

    - name: Distribute windows exe
      uses: actions/upload-artifact@v2
      with:
        name: 'RedPiano-windows for ${{github.sha}}'
        path: dist/RedPiano-windows.zip

    - name: Pack universal distribution
      run: |
        del dist/RedPiano/main.exe
        python -m zipapp src -m "main:main" -o RedPiano.pyz -c
        copy RedPiano.pyz dist/RedPiano
        7z a -tzip dist/RedPiano-universal.zip dist/RedPiano

    - name: Distribute universal zipapp
      uses: actions/upload-artifact@v2
      with:
        name: 'RedPiano-universal for ${{github.sha}}'
        path: dist/RedPiano-universal.zip

    - name: Upload to the Github release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      with:
        files: |
          dist/RedPiano-windows.zip
          dist/RedPiano-universal.zip
          LICENSE
